/* CharCountProEditor専用のCSSスタイル */

/* 全角スペースの強調表示 */
:global(.full-width-space-highlight) {
  background: rgba(255, 0, 0, 0.3) !important;
  border-radius: 2px !important;
}

.fullWidthSpaceHighlight {
  background: rgba(255, 0, 0, 0.3) !important;
  border-radius: 2px !important;
}

/* 改行マーカー */
:global(.hard-break-marker),
:global(.paragraph-end-marker) {
  color: rgba(148, 163, 184, 0.6) !important;
  font-size: 10px !important;
  font-weight: bold !important;
  pointer-events: none !important;
  user-select: none !important;
}

.hardBreakMarker,
.paragraphEndMarker {
  color: rgba(148, 163, 184, 0.6) !important;
  font-size: 10px !important;
  font-weight: bold !important;
  pointer-events: none !important;
  user-select: none !important;
}

:global(.dark) .hardBreakMarker,
:global(.dark) .paragraphEndMarker,
:global(.dark) :global(.hard-break-marker),
:global(.dark) :global(.paragraph-end-marker) {
  color: rgba(148, 163, 184, 0.4) !important;
}

/* 段落マーカー */
:global(.paragraph-marker) {
  color: rgba(148, 163, 184, 0.6) !important;
  font-size: 12px !important;
  font-weight: bold !important;
  pointer-events: none !important;
  user-select: none !important;
}

.paragraphMarker {
  color: rgba(148, 163, 184, 0.6) !important;
  font-size: 12px !important;
  font-weight: bold !important;
  pointer-events: none !important;
  user-select: none !important;
}

:global(.dark) .paragraphMarker,
:global(.dark) :global(.paragraph-marker) {
  color: rgba(148, 163, 184, 0.4) !important;
}

/* Tiptapエディターのスタイリング */
.tiptapEditor {
  outline: none !important;
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow-wrap: break-word !important;
  tab-size: 4 !important; /* タブ文字のサイズを4スペース相当に設定 */
  -moz-tab-size: 4 !important;
  max-width: 100% !important;
  min-width: 0 !important;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    "Helvetica Neue", Arial, "Noto Color Emoji", "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol", sans-serif !important;
}

.tiptapEditor :global(.ProseMirror) {
  outline: none !important;
  padding: 1rem !important;
  min-height: 100% !important;
  max-width: 100% !important;
  min-width: 0 !important;
  overflow-wrap: break-word !important;
  font-family: inherit !important;
}

.tiptapEditor :global(p) {
  margin: 0.5em 0 !important;
}

.tiptapEditor :global(ul),
.tiptapEditor :global(ol) {
  padding-left: 1.25rem !important;
  margin: 0.5em 0 !important;
}

.tiptapEditor :global(li) {
  margin: 0.25em 0 !important;
}

.tiptapEditor :global(pre) {
  background: rgba(148, 163, 184, 0.1) !important;
  border-radius: 6px !important;
  padding: 1em !important;
  margin: 1em 0 !important;
  overflow-x: auto !important;
  max-width: 100% !important;
  white-space: pre !important;
  position: relative !important;
}

/* コードブロック内のProseMirror要素の位置調整 */
.tiptapEditor :global(pre .ProseMirror) {
  padding: 0 !important;
  margin: 0 !important;
  background: transparent !important;
  font-family: "Fira Code", "Monaco", "Menlo", "Ubuntu Mono", monospace !important;
  font-size: 0.9em !important;
  line-height: 1.5 !important;
  text-indent: 0 !important;
}

/* コードブロック内のProseMirrorの直接の子要素 */
.tiptapEditor :global(pre .ProseMirror > *) {
  margin: 0 !important;
  text-indent: 0 !important;
  margin-left: 0 !important;
}

/* コードブロック内の行の統一された位置設定 */
.tiptapEditor :global(pre p) {
  margin: 0 !important;
  line-height: 1.5 !important;
  text-indent: 0 !important;
}

/* コードブロック内のテキストノードの位置統一 */
.tiptapEditor :global(pre *) {
  margin: 0 !important;
  text-indent: 0 !important;
}

/* コードブロック内の最初の行と他の行の位置を完全に統一 */
.tiptapEditor :global(pre p:first-child) {
  margin: 0 !important;
  text-indent: 0 !important;
}

/* コードブロック内での全ての子要素の位置リセット */
.tiptapEditor :global(pre > *) {
  margin: 0 !important;
  text-indent: 0 !important;
  display: block !important;
}

/* CodeBlockLowlight拡張機能用の追加スタイル */
.tiptapEditor :global(.hljs) {
  background: transparent !important;
  padding: 0 !important;
  margin: 0 !important;
  display: block !important;
  overflow-x: visible !important;
  text-indent: 0 !important;
}

/* コードブロック内でのhljsクラス内の要素統一 */
.tiptapEditor :global(.hljs *) {
  margin: 0 !important;
  text-indent: 0 !important;
}

/* ===== Syntax Highlighting Colors ===== */

/* GitHub-like theme for light mode */
.tiptapEditor :global(.hljs-comment),
.tiptapEditor :global(.hljs-quote) {
  color: #6a737d !important;
  font-style: italic !important;
}

.tiptapEditor :global(.hljs-keyword),
.tiptapEditor :global(.hljs-selector-tag),
.tiptapEditor :global(.hljs-subst) {
  color: #d73a49 !important;
  font-weight: bold !important;
}

.tiptapEditor :global(.hljs-number),
.tiptapEditor :global(.hljs-literal),
.tiptapEditor :global(.hljs-variable),
.tiptapEditor :global(.hljs-template-variable),
.tiptapEditor :global(.hljs-tag .hljs-attr) {
  color: #005cc5 !important;
}

.tiptapEditor :global(.hljs-string),
.tiptapEditor :global(.hljs-doctag) {
  color: #032f62 !important;
}

.tiptapEditor :global(.hljs-title),
.tiptapEditor :global(.hljs-section),
.tiptapEditor :global(.hljs-selector-id) {
  color: #6f42c1 !important;
  font-weight: bold !important;
}

.tiptapEditor :global(.hljs-subst) {
  font-weight: normal !important;
}

.tiptapEditor :global(.hljs-type),
.tiptapEditor :global(.hljs-class .hljs-title) {
  color: #d73a49 !important;
  font-weight: bold !important;
}

.tiptapEditor :global(.hljs-tag),
.tiptapEditor :global(.hljs-name),
.tiptapEditor :global(.hljs-attribute) {
  color: #22863a !important;
  font-weight: normal !important;
}

.tiptapEditor :global(.hljs-regexp),
.tiptapEditor :global(.hljs-link) {
  color: #e36209 !important;
}

.tiptapEditor :global(.hljs-symbol),
.tiptapEditor :global(.hljs-bullet) {
  color: #005cc5 !important;
}

.tiptapEditor :global(.hljs-built_in),
.tiptapEditor :global(.hljs-builtin-name) {
  color: #005cc5 !important;
}

.tiptapEditor :global(.hljs-meta) {
  color: #005cc5 !important;
}

.tiptapEditor :global(.hljs-deletion) {
  background: #ffeef0 !important;
}

.tiptapEditor :global(.hljs-addition) {
  background: #f0fff4 !important;
}

.tiptapEditor :global(.hljs-emphasis) {
  font-style: italic !important;
}

.tiptapEditor :global(.hljs-strong) {
  font-weight: bold !important;
}

/* Dark mode colors */
:global(.dark) .tiptapEditor :global(.hljs-comment),
:global(.dark) .tiptapEditor :global(.hljs-quote) {
  color: #8b949e !important;
  font-style: italic !important;
}

:global(.dark) .tiptapEditor :global(.hljs-keyword),
:global(.dark) .tiptapEditor :global(.hljs-selector-tag),
:global(.dark) .tiptapEditor :global(.hljs-subst) {
  color: #ff7b72 !important;
  font-weight: bold !important;
}

:global(.dark) .tiptapEditor :global(.hljs-number),
:global(.dark) .tiptapEditor :global(.hljs-literal),
:global(.dark) .tiptapEditor :global(.hljs-variable),
:global(.dark) .tiptapEditor :global(.hljs-template-variable),
:global(.dark) .tiptapEditor :global(.hljs-tag .hljs-attr) {
  color: #79c0ff !important;
}

:global(.dark) .tiptapEditor :global(.hljs-string),
:global(.dark) .tiptapEditor :global(.hljs-doctag) {
  color: #a5d6ff !important;
}

:global(.dark) .tiptapEditor :global(.hljs-title),
:global(.dark) .tiptapEditor :global(.hljs-section),
:global(.dark) .tiptapEditor :global(.hljs-selector-id) {
  color: #d2a8ff !important;
  font-weight: bold !important;
}

:global(.dark) .tiptapEditor :global(.hljs-subst) {
  font-weight: normal !important;
}

:global(.dark) .tiptapEditor :global(.hljs-type),
:global(.dark) .tiptapEditor :global(.hljs-class .hljs-title) {
  color: #ff7b72 !important;
  font-weight: bold !important;
}

:global(.dark) .tiptapEditor :global(.hljs-tag),
:global(.dark) .tiptapEditor :global(.hljs-name),
:global(.dark) .tiptapEditor :global(.hljs-attribute) {
  color: #7ee787 !important;
  font-weight: normal !important;
}

:global(.dark) .tiptapEditor :global(.hljs-regexp),
:global(.dark) .tiptapEditor :global(.hljs-link) {
  color: #ffa657 !important;
}

:global(.dark) .tiptapEditor :global(.hljs-symbol),
:global(.dark) .tiptapEditor :global(.hljs-bullet) {
  color: #79c0ff !important;
}

:global(.dark) .tiptapEditor :global(.hljs-built_in),
:global(.dark) .tiptapEditor :global(.hljs-builtin-name) {
  color: #79c0ff !important;
}

:global(.dark) .tiptapEditor :global(.hljs-meta) {
  color: #79c0ff !important;
}

:global(.dark) .tiptapEditor :global(.hljs-deletion) {
  background: #490202 !important;
}

:global(.dark) .tiptapEditor :global(.hljs-addition) {
  background: #04260f !important;
}

:global(.dark) .tiptapEditor :global(.hljs-emphasis) {
  font-style: italic !important;
}

:global(.dark) .tiptapEditor :global(.hljs-strong) {
  font-weight: bold !important;
}

/* ===== Language Label Styles ===== */
.tiptapEditor :global(pre[data-language]) {
  position: relative !important;
}

.tiptapEditor :global(pre[data-language]::before) {
  content: attr(data-language) !important;
  position: absolute !important;
  top: 0.5rem !important;
  right: 0.5rem !important;
  background: rgba(0, 0, 0, 0.1) !important;
  color: rgba(0, 0, 0, 0.6) !important;
  padding: 0.2rem 0.5rem !important;
  border-radius: 0.25rem !important;
  font-size: 0.75rem !important;
  font-weight: 500 !important;
  text-transform: uppercase !important;
  letter-spacing: 0.05em !important;
  z-index: 10 !important;
  pointer-events: none !important;
  user-select: none !important;
}

:global(.dark) .tiptapEditor :global(pre[data-language]::before) {
  background: rgba(255, 255, 255, 0.1) !important;
  color: rgba(255, 255, 255, 0.6) !important;
}

/* コードブロック内の全ての段落とテキストの左端統一 */
.tiptapEditor :global(pre *),
.tiptapEditor :global(pre p),
.tiptapEditor :global(pre span),
.tiptapEditor :global(pre div) {
  text-align: left !important;
  text-indent: 0 !important;
  margin-left: 0 !important;
}

/* コードブロック内での改行の統一 */
.tiptapEditor :global(pre br) {
  line-height: 1.5 !important;
}

/* コードブロック内のスパン要素の位置統一 */
.tiptapEditor :global(pre span) {
  display: inline !important;
  vertical-align: baseline !important;
}

.tiptapEditor :global(code) {
  background: rgba(148, 163, 184, 0.1) !important;
  border-radius: 3px !important;
  padding: 0.2em 0.4em !important;
  font-size: 0.9em !important;
}

.tiptapEditor :global(blockquote) {
  border-left: 4px solid rgba(148, 163, 184, 0.3) !important;
  padding-left: 1em !important;
  margin: 1em 0 !important;
  font-style: italic !important;
}

.tiptapEditor :global(hr) {
  border: none !important;
  border-top: 2px solid rgba(148, 163, 184, 0.3) !important;
  margin: 2em 0 !important;
}

.tiptapEditor :global(table) {
  border-collapse: collapse !important;
  width: 100% !important;
  margin: 1em 0 !important;
  table-layout: fixed !important; /* 固定レイアウト */
}

.tiptapEditor :global(th),
.tiptapEditor :global(td) {
  border: 1px solid rgba(148, 163, 184, 0.3) !important;
  padding: 0.5em !important;
  text-align: left !important;
  word-wrap: break-word !important; /* 長いテキストを折り返し */
  overflow-wrap: break-word !important;
  vertical-align: top !important;
  min-width: 120px !important; /* 最小幅を設定 */
}

.tiptapEditor :global(th) {
  background: rgba(148, 163, 184, 0.1) !important;
  font-weight: bold !important;
}

/* テーブルセルの編集可能状態でのスタイル */
.tiptapEditor :global(table p) {
  margin: 0 !important;
  padding: 0 !important;
}

/* テーブルのリサイズ可能な列 */
.tiptapEditor :global(.tableWrapper) {
  overflow-x: auto !important;
  margin: 1em 0 !important;
}

.tiptapEditor :global(.resize-cursor) {
  cursor: col-resize !important;
}

/* テーブルの選択状態のスタイル */
.tiptapEditor :global(.selectedCell) {
  background: rgba(59, 130, 246, 0.2) !important;
}

/* テーブルのホバー状態 */
.tiptapEditor :global(table:hover) {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
}

/* テーブルのアクティブな状態 */
.tiptapEditor :global(table .has-focus) {
  outline: 2px solid rgba(59, 130, 246, 0.5) !important;
  outline-offset: 2px !important;
}

.tiptapEditor :global(.task-list) {
  list-style: none !important;
  padding-left: 0 !important;
}

.tiptapEditor :global(.task-item) {
  display: flex !important;
  align-items: flex-start !important;
  gap: 0.5em !important;
}

.tiptapEditor :global(.task-item input[type="checkbox"]) {
  margin: 0 !important;
  margin-top: 0.2em !important;
}

/* Math expressions */
.tiptapEditor :global(.katex) {
  font-size: 1em !important;
}

/* 数式のインライン表示 */
.tiptapEditor :global(.math-inline) {
  display: inline-flex !important;
  align-items: center !important;
  justify-content: center !important;
  vertical-align: baseline !important;
}

/* カスタムスクロールバー */
.statisticsScrollbar::-webkit-scrollbar {
  width: 6px;
}

.statisticsScrollbar::-webkit-scrollbar-track {
  background: rgba(148, 163, 184, 0.1);
  border-radius: 3px;
}

.statisticsScrollbar::-webkit-scrollbar-thumb {
  background: rgba(148, 163, 184, 0.3);
  border-radius: 3px;
  transition: background 0.2s ease;
}

.statisticsScrollbar::-webkit-scrollbar-thumb:hover {
  background: rgba(148, 163, 184, 0.5);
}

:global(.dark) .statisticsScrollbar::-webkit-scrollbar-track {
  background: rgba(71, 85, 105, 0.1);
}

:global(.dark) .statisticsScrollbar::-webkit-scrollbar-thumb {
  background: rgba(71, 85, 105, 0.4);
}

:global(.dark) .statisticsScrollbar::-webkit-scrollbar-thumb:hover {
  background: rgba(71, 85, 105, 0.6);
}

/* リサイザーのホバー効果 */
.statisticsResizer {
  position: relative;
}

.statisticsResizer::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 20px;
  height: 2px;
  background: rgba(148, 163, 184, 0.4);
  border-radius: 1px;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.statisticsResizer:hover::before,
.statisticsResizer.resizing::before {
  opacity: 1;
}

:global(.dark) .statisticsResizer::before {
  background: rgba(203, 213, 225, 0.4);
}
